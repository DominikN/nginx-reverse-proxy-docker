# # https://www.domysee.com/blogposts/reverse-proxy-nginx-docker-compose

# # http {
# #     keepalive_timeout 10m;
# #     proxy_connect_timeout  600s;
# #     proxy_send_timeout  600s;
# #     proxy_read_timeout  600s;
# #     fastcgi_send_timeout 600s;
# #     fastcgi_read_timeout 600s;
# #     include /etc/nginx/sites-enabled/*.conf;
# # }

# worker_processes 1;

# events { worker_connections 1024; }

# http {
#     # keepalive_timeout 10m;
#     # proxy_connect_timeout  600s;
#     # proxy_send_timeout  600s;
#     # proxy_read_timeout  600s;
#     # fastcgi_send_timeout 600s;
#     # fastcgi_read_timeout 600s;
#     # include /etc/nginx/sites-enabled/*.conf;

#     sendfile on;

#     # działa na VPSie
#     upstream backend {
#         # server [fc94:f4b2:9ffc:c3a5:93b4:b873:9ae1:67da]:8080;
#         server my-website:8080 max_fails=10  fail_timeout=600;
#         server google.com;
#     }

#     server {  
#         listen 8089;
#         listen [::]:8089;

#         # resolver 127.0.0.11 valid=30s;  #this IP is specified in /etc/resolv.conf

#         location / {
#         # tutaj jest opisane dlaczego musimy najpierw ustawić zmienną, a zaraz potem ją użyć:
#         # https://sandro-keil.de/blog/let-nginx-start-if-upstream-host-is-unavailable-or-down/
#         # set $myupstream http://[fc94:f4b2:9ffc:c3a5:93b4:b873:9ae1:67da]:8080;
        
#             #set $myupstream http://backend;
#             #proxy_pass $myupstream;
#             resolver 127.0.0.11 valid=100s;
#             proxy_pass http://backend;

#             proxy_redirect     off;
#             proxy_set_header   Host $host;
#             proxy_set_header   X-Real-IP $remote_addr;
#             proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header   X-Forwarded-Host $server_name;

#         # proxy_pass http://backend;
#         # proxy_connect_timeout 1200;
#         # proxy_send_timeout 1200;
#         # proxy_read_timeout 1200;
#         # fastcgi_send_timeout 1200;
#         # fastcgi_read_timeout 1200;
#         }
#     }
# }

# działa na VPSie
server {  
    listen 8089;
    listen [::]:8089;

    resolver my-dns:57 valid=30s;  #this IP is specified in /etc/resolv.conf

    location / {
        # tutaj jest opisane dlaczego musimy najpierw ustawić zmienną, a zaraz potem ją użyć:
        # https://sandro-keil.de/blog/let-nginx-start-if-upstream-host-is-unavailable-or-down/
        # set $myupstream http://[fc94:f7f1:e9bc:0792:cd44:a757:425e:6d39]:8080;
        set $myupstream http://my-website:8080;
        proxy_pass $myupstream;
    }
}

# działa na localhoście / nie działa na VPSie
# server {  89
#     listen 8089;
#     listen [::]:8089;

#     # kiedy korzystam z hostname'ów husarnetowych zamiast IPv6, to muszę ustawić resolver IP. Niestety /etc/hosts nie działa
#     resolver 127.0.0.11 valid=30s;  #this IP is specified in /etc/resolv.conf

#     location / {
#         # tutaj jest opisane dlaczego musimy najpierw ustawić zmienną, a zaraz potem ją użyć:
#         # https://sandro-keil.de/blog/let-nginx-start-if-upstream-host-is-unavailable-or-down/
#         set $myupstream http://my-website:8080;
#         proxy_pass $myupstream;
#     }
# }